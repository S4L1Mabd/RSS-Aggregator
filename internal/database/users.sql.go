// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package tutorial

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one

INSERT INTO users(id,created_time,update_time,name) /* this file used from sqlc to run this queries and give a .go equivalent*/
VALUES ($1,$2,$3,$4)
RETURNING id, created_time, update_time, name
`

type CreateUserParams struct {
	ID          pgtype.UUID
	CreatedTime pgtype.Timestamp
	UpdateTime  pgtype.Timestamp
	Name        string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.ID,
		arg.CreatedTime,
		arg.UpdateTime,
		arg.Name,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedTime,
		&i.UpdateTime,
		&i.Name,
	)
	return i, err
}
